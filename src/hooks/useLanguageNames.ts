
import { useMemo } from 'react';

interface LanguageName {
  name: string;
  nativeName: string;
  flag: string;
}

interface LanguageNames {
  [key: string]: LanguageName;
}

export function useLanguageNames() {
  const languageNames: LanguageNames = useMemo(() => ({
    'ar': {
      name: 'Arabic',
      nativeName: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©',
      flag: 'ðŸ‡¸ðŸ‡¦'
    },
    'ar-iq': {
      name: 'Iraqi Arabic',
      nativeName: 'Ø§Ù„Ø¹Ø±Ø§Ù‚ÙŠØ©',
      flag: 'ðŸ‡®ðŸ‡¶'
    },
    'en': {
      name: 'English',
      nativeName: 'English',
      flag: 'ðŸ‡ºðŸ‡¸'
    },
    'fr': {
      name: 'French',
      nativeName: 'FranÃ§ais',
      flag: 'ðŸ‡«ðŸ‡·'
    },
    'ja': {
      name: 'Japanese',
      nativeName: 'æ—¥æœ¬èªž',
      flag: 'ðŸ‡¯ðŸ‡µ'
    },
    'zh': {
      name: 'Chinese',
      nativeName: 'ä¸­æ–‡',
      flag: 'ðŸ‡¨ðŸ‡³'
    }
  }), []);
  
  const getGroupedLanguages = () => {
    return Object.keys(languageNames);
  };
  
  return { languageNames, getGroupedLanguages };
}
